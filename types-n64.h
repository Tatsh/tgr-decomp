/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'n64-rom'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long
#define _BYTE char

#ifndef __GNUC__
#define __attribute__(x)
#define aligned(x)
#endif

struct OSThread_s;
struct internal_state;
typedef unsigned int uInt;

/* 1 */
typedef void **va_list;

/* 2 */
typedef int BOOL;

/* 7 */
typedef unsigned __int8 u8;

/* 8 */
typedef unsigned __int16 u16;

/* 9 */
typedef unsigned int u32;

/* 10 */
typedef unsigned __int64 u64;

/* 11 */
typedef signed __int8 s8;

/* 12 */
typedef __int16 s16;

/* 13 */
typedef int s32;

/* 14 */
typedef __int64 s64;

/* 15 */
typedef volatile unsigned __int8 vu8;

/* 16 */
typedef volatile unsigned __int16 vu16;

/* 17 */
typedef volatile unsigned int vu32;

/* 18 */
typedef volatile unsigned __int64 vu64;

/* 19 */
typedef volatile signed __int8 vs8;

/* 20 */
typedef volatile __int16 vs16;

/* 21 */
typedef volatile int vs32;

/* 22 */
typedef volatile __int64 vs64;

/* 23 */
typedef float f32;

/* 24 */
typedef double f64;

/* 25 */
enum MACRO_OS_STATE {
    OS_STATE_STOPPED = 0x1,
    OS_STATE_RUNNABLE = 0x2,
    OS_STATE_RUNNING = 0x4,
    OS_STATE_WAITING = 0x8,
};

/* 26 */
enum MACRO_OS_PRIORITY {
    OS_PRIORITY_IDLE = 0x0,
    OS_PRIORITY_APPMAX = 0x7F,
    OS_PRIORITY_SIMGR = 0x8C,
    OS_PRIORITY_PIMGR = 0x96,
    OS_PRIORITY_RMONSPIN = 0xC8,
    OS_PRIORITY_RMON = 0xFA,
    OS_PRIORITY_VIMGR = 0xFE,
    OS_PRIORITY_MAX = 0xFF,
};

/* 27 */
typedef u32 OSEvent;

/* 28 */
typedef void *OSMesg;

/* 279 */
typedef struct OSThread_s OSThread;

/* 29 */
struct __attribute__((aligned(4))) OSMesgQueue_s {
    OSThread *mtqueue;
    OSThread *fullqueue;
    s32 validCount;
    s32 first;
    s32 msgCount;
    OSMesg *msg;
};

/* 31 */
typedef s32 OSPri;

/* 32 */
typedef s32 OSId;

/* 45 */
struct s4E4F67A75E0AE34BEF5674BA45622365s414A4FD4108823717B4E827846A2E8AF {
    f32 f_odd;
    f32 f_even;
};

/* 46 */
union s4E4F67A75E0AE34BEF5674BA45622365 {
    struct s4E4F67A75E0AE34BEF5674BA45622365s414A4FD4108823717B4E827846A2E8AF f;
    f64 d;
};

/* 47 */
typedef union s4E4F67A75E0AE34BEF5674BA45622365 __OSfp;

/* 48 */
struct s716511E05477B8A109B91157A1EED543 {
    u64 at;
    u64 v0;
    u64 v1;
    u64 a0;
    u64 a1;
    u64 a2;
    u64 a3;
    u64 t0;
    u64 t1;
    u64 t2;
    u64 t3;
    u64 t4;
    u64 t5;
    u64 t6;
    u64 t7;
    u64 s0;
    u64 s1;
    u64 s2;
    u64 s3;
    u64 s4;
    u64 s5;
    u64 s6;
    u64 s7;
    u64 t8;
    u64 t9;
    u64 gp;
    u64 sp;
    u64 s8;
    u64 ra;
    u64 lo;
    u64 hi;
    u32 sr;
    u32 pc;
    u32 cause;
    u32 badvaddr;
    u32 rcp;
    u32 fpcsr;
    __OSfp fp0;
    __OSfp fp2;
    __OSfp fp4;
    __OSfp fp6;
    __OSfp fp8;
    __OSfp fp10;
    __OSfp fp12;
    __OSfp fp14;
    __OSfp fp16;
    __OSfp fp18;
    __OSfp fp20;
    __OSfp fp22;
    __OSfp fp24;
    __OSfp fp26;
    __OSfp fp28;
    __OSfp fp30;
};

/* 49 */
typedef struct s716511E05477B8A109B91157A1EED543 __OSThreadContext;

/* 50 */
struct __attribute__((aligned(8))) OSThread_s {
    struct OSThread_s *next;
    OSPri priority;
    struct OSThread_s **queue;
    struct OSThread_s *tlnext;
    u16 state;
    u16 flags;
    OSId id;
    int _fp;
    __attribute__((packed)) __attribute__((aligned(1))) __OSThreadContext context;
};

/* 30 */
typedef struct OSMesgQueue_s OSMesgQueue;

/* 33 */
enum MACRO_BOOL {
    True = 0x1,
    False = 0x0,
};

/* 36 */
struct sEAAE38108730DC3BAD53B5BE61A639F8 {
    u32 ctrl;
    u32 width;
    u32 burst;
    u32 vSync;
    u32 hSync;
    u32 leap;
    u32 hStart;
    u32 xScale;
    u32 vCurrent;
};

/* 37 */
typedef struct sEAAE38108730DC3BAD53B5BE61A639F8 OSViCommonRegs;

/* 38 */
struct sE6853D1655C03090483CABEFE9B79EDF {
    u32 origin;
    u32 yScale;
    u32 vStart;
    u32 vBurst;
    u32 vIntr;
};

/* 39 */
typedef struct sE6853D1655C03090483CABEFE9B79EDF OSViFieldRegs;

/* 40 */
struct s921235AF43FB8F81D0D57D4446A26299 {
    u8 type;
    OSViCommonRegs comRegs;
    OSViFieldRegs fldRegs[2];
};

/* 41 */
typedef struct s921235AF43FB8F81D0D57D4446A26299 OSViMode;

/* 42 */
enum MACRO_OS_TV {
    OS_TV_PAL = 0x0,
    OS_TV_NTSC = 0x1,
    OS_TV_MPAL = 0x2,
};

/* 43 */
typedef u32 OSPageMask;

/* 44 */
typedef u64 OSTime;

/* 52 */
struct OSTimer_s {
    struct OSTimer_s *next;
    struct OSTimer_s *prev;
    OSTime interval;
    OSTime value;
    OSMesgQueue *mq;
    OSMesg msg;
};

/* 53 */
typedef struct OSTimer_s OSTimer;

/* 54 */
struct sB85535430D39400EB11EFD964F7852AC {
    u32 errStatus;
    void *dramAddr;
    void *C2Addr;
    u32 sectorSize;
    u32 C1ErrNum;
    u32 C1ErrSector[4];
};

/* 55 */
typedef struct sB85535430D39400EB11EFD964F7852AC __OSBlockInfo;

/* 56 */
struct sBEFDAA7E852ED69495BEFCAB402C6E1F {
    u32 cmdType;
    u16 transferMode;
    u16 blockNum;
    s32 sectorNum;
    u32 devAddr;
    u32 bmCtlShadow;
    u32 seqCtlShadow;
    __OSBlockInfo block[2];
};

/* 57 */
typedef struct sBEFDAA7E852ED69495BEFCAB402C6E1F __OSTranxInfo;

/* 58 */
struct OSPiHandle_s {
    struct OSPiHandle_s *next;
    u8 type;
    u8 latency;
    u8 pageSize;
    u8 relDuration;
    u8 pulse;
    u8 domain;
    u32 baseAddress;
    u32 speed;
    __OSTranxInfo transferInfo;
};

/* 59 */
typedef struct OSPiHandle_s OSPiHandle;

/* 60 */
struct s2532161A69FCA0D5AAAACBD9CC34EF2D {
    u8 type;
    u32 address;
};

/* 61 */
typedef struct s2532161A69FCA0D5AAAACBD9CC34EF2D OSPiInfo;

/* 62 */
struct sAF973A6E5BB205B0E235C8433CF0B291 {
    u16 type;
    u8 pri;
    u8 status;
    OSMesgQueue *retQueue;
};

/* 63 */
typedef struct sAF973A6E5BB205B0E235C8433CF0B291 OSIoMesgHdr;

/* 64 */
struct s076D0378C2C98B6EE81EC69E176DAF88 {
    OSIoMesgHdr hdr;
    void *dramAddr;
    u32 devAddr;
    u32 size;
    OSPiHandle *piHandle;
};

/* 65 */
typedef struct s076D0378C2C98B6EE81EC69E176DAF88 OSIoMesg;

/* 66 */
struct s4F16F85BFEA5BE430BD1260D705B7CBC {
    s32 active;
    struct unk *thread;
    OSMesgQueue *cmdQueue;
    OSMesgQueue *evtQueue;
    OSMesgQueue *acsQueue;
    s32(__cdecl *dma)(s32, u32, void *, u32);
    s32(__cdecl *edma)(OSPiHandle *, s32, u32, void *, u32);
};

/* 67 */
typedef struct s4F16F85BFEA5BE430BD1260D705B7CBC OSDevMgr;

/* 68 */
struct s129E56398678841512B8E60B5B3983BE {
    int status;
    OSMesgQueue *queue;
    int channel;
    u8 id[32];
    u8 label[32];
    int version;
    int dir_size;
    int inode_table;
    int minode_table;
    int dir_table;
    int inode_start_page;
    u8 banks;
    u8 activebank;
};

/* 69 */
typedef struct s129E56398678841512B8E60B5B3983BE OSPfs;

/* 70 */
struct s38AFACCF42683EB2BDAE9DC980B563A7 {
    u32 file_size;
    u32 game_code;
    u16 company_code;
    char ext_name[4];
    char game_name[16];
};

/* 71 */
typedef struct s38AFACCF42683EB2BDAE9DC980B563A7 OSPfsState;

/* 72 */
struct s15C7769E222B51804475695F7D6168CE {
    u16 fixed1;
    u16 start_address;
    u8 nintendo_chr[48];
    u8 game_title[16];
    u16 company_code;
    u8 body_code;
    u8 cart_type;
    u8 rom_size;
    u8 ram_size;
    u8 country_code;
    u8 fixed2;
    u8 version;
    u8 isum;
    u16 sum;
};

/* 73 */
typedef struct s15C7769E222B51804475695F7D6168CE OSGbpakId;

/* 74 */
typedef u32 OSIntMask;

/* 75 */
typedef u32 OSHWIntr;

/* 76 */
struct sBA31E41B22E31CCBEBD3B618C85517BD {
    u16 *histo_base;
    u32 histo_size;
    u32 *text_start;
    u32 *text_end;
};

/* 77 */
typedef struct sBA31E41B22E31CCBEBD3B618C85517BD OSProf;

/* 78 */
struct s540CEC68370E23DFB8CF315AC929B63A {
    u16 type;
    u8 status;
    u8 errno;
};

/* 79 */
typedef struct s540CEC68370E23DFB8CF315AC929B63A OSContStatus;

/* 80 */
struct s5FD7DC9F2FBBB54CD90739ACDEBBDBD3 {
    u16 button;
    s8 stick_x;
    s8 stick_y;
    u8 errno;
};

/* 81 */
typedef struct s5FD7DC9F2FBBB54CD90739ACDEBBDBD3 OSContPad;

/* 82 */
struct sF6954C9C4F44A3F0AF2E56BDBD16EA15 {
    void *address;
    u8 databuffer[32];
    u8 addressCrc;
    u8 dataCrc;
    u8 errno;
};

/* 83 */
typedef struct sF6954C9C4F44A3F0AF2E56BDBD16EA15 OSContRamIo;

/* 84 */
struct u64_write_arg {
    void *buffer;
    int ramrom_addr;
    int nbytes;
};

/* 85 */
typedef struct u64_write_arg u64_write_arg_t;

/* 86 */
struct u64_read_arg {
    void *buffer;
    int ramrom_addr;
    int nbytes;
};

/* 87 */
typedef struct u64_read_arg u64_read_arg_t;

/* 88 */
struct u64_board {
    volatile unsigned int product_id_reg;
    unsigned __int8 fill_0[1020];
    volatile unsigned int reset_control;
    unsigned __int8 fill_1[1020];
    volatile unsigned int cart_interrupt;
    unsigned __int8 fill_3[508];
    volatile unsigned int dram_page_cntrl;
    unsigned __int8 fill_2[508];
    volatile unsigned int gio_interrupt;
    unsigned __int8 fill_4[508];
    volatile unsigned int gio_sync;
};

/* 89 */
struct sB0E282D8D7952CDA2C4DD976A844D045 {
    u32 magic;
    u32 len;
    u32 *base;
    s32 startCount;
    s32 writeOffset;
};

/* 90 */
typedef struct sB0E282D8D7952CDA2C4DD976A844D045 OSLog;

/* 91 */
struct s0FD621FDEACF78F5EE7E55D21606DB3B {
    u32 magic;
    u32 timeStamp;
    u16 argCount;
    u16 eventID;
};

/* 92 */
typedef struct s0FD621FDEACF78F5EE7E55D21606DB3B OSLogItem;

/* 93 */
struct sC87E94C6BBA164662C4A0853B69EAE15 {
    u32 magic;
    u32 version;
};

/* 94 */
typedef struct sC87E94C6BBA164662C4A0853B69EAE15 OSLogFileHdr;

/* 95 */
struct s67BCAAA178347F42891D993181EBC38B {
    u32 type;
    u32 flags;
    u64 *ucode_boot;
    u32 ucode_boot_size;
    u64 *ucode;
    u32 ucode_size;
    u64 *ucode_data;
    u32 ucode_data_size;
    u64 *dram_stack;
    u32 dram_stack_size;
    u64 *output_buff;
    u64 *output_buff_size;
    u64 *data_ptr;
    u32 data_size;
    u64 *yield_data_ptr;
    u32 yield_data_size;
};

/* 96 */
typedef struct s67BCAAA178347F42891D993181EBC38B OSTask_t;

/* 97 */
union sE833DD9147643FD3CE399C2B37C3F966 {
    OSTask_t t;
    __int64 force_structure_alignment;
};

/* 98 */
typedef union sE833DD9147643FD3CE399C2B37C3F966 OSTask;

/* 99 */
typedef u32 OSYieldResult;

/* 100 */
struct s4FA29701263D2EF277B845E0B6B9C553 {
    __int16 type;
    char misc[30];
};

/* 101 */
typedef struct s4FA29701263D2EF277B845E0B6B9C553 OSScMsg;

/* 102 */
struct OSScTask_s {
    struct OSScTask_s *next;
    u32 state;
    u32 flags;
    void *framebuffer;
    OSTask list;
    OSMesgQueue *msgQ;
    OSMesg msg;
    OSTime startTime;
    OSTime totalTime;
};

/* 103 */
typedef struct OSScTask_s OSScTask;

/* 104 */
struct SCClient_s {
    struct SCClient_s *next;
    OSMesgQueue *msgQ;
};

/* 105 */
typedef struct SCClient_s OSScClient;

/* 106 */
struct _Region_s {
    u8 *r_startBufferAddress;
    u8 *r_endAddress;
    s32 r_bufferSize;
    s32 r_bufferCount;
    u16 r_freeList;
    u16 r_alignSize;
};

/* 107 */
typedef struct _Region_s OSRegion;

/* 108 */
struct s79A431F826676B0D4D7595D950318433 {
    unsigned __int32 type : 6;
    unsigned __int32 length : 2;
    char buf[3];
};

/* 109 */
typedef struct s79A431F826676B0D4D7595D950318433 rdbPacket;

/* 110 */
struct sA9173D3888B6DD51E7C647F87921A47E {
    unsigned __int16 imagic;
    unsigned __int16 type;
    unsigned __int16 dim;
    unsigned __int16 xsize;
    unsigned __int16 ysize;
    unsigned __int16 zsize;
    unsigned int min;
    unsigned int max;
    unsigned int wastebytes;
    char name[80];
    unsigned int colormap;
    int file;
    unsigned __int16 flags;
    __int16 dorev;
    __int16 x;
    __int16 y;
    __int16 z;
    __int16 cnt;
    unsigned __int16 *ptr;
    unsigned __int16 *base;
    unsigned __int16 *tmpbuf;
    unsigned int offset;
    unsigned int rleend;
    unsigned int *rowstart;
    int *rowsize;
};

/* 111 */
typedef struct sA9173D3888B6DD51E7C647F87921A47E IMAGE;

/* 112 */
struct s03A3C2D23D97F42A9CAF534A7428A519 {
    u8 command;
    u8 reserve1;
    u8 control;
    u8 reserve3;
    u8 status;
    u8 sense;
    u8 reserve6;
    u8 reserve7;
    OSMesgQueue *post;
};

/* 113 */
typedef struct s03A3C2D23D97F42A9CAF534A7428A519 LEOCmdHeader;

/* 114 */
struct sF9D8B2A20430FF9D2D58A6065C7229BA {
    LEOCmdHeader header;
};

/* 115 */
typedef struct sF9D8B2A20430FF9D2D58A6065C7229BA LEOCmdClearQue;

/* 116 */
struct s694C9883F72FBB3A27AFB0BAFA83B459 {
    LEOCmdHeader header;
    u8 dev_type;
    u8 version;
    u8 dev_num;
    u8 leo_bios_ver;
    u32 reserve5;
};

/* 117 */
typedef struct s694C9883F72FBB3A27AFB0BAFA83B459 LEOCmdInquiry;

/* 118 */
struct s602B82F1E1FC18439A07C0036332AED1 {
    LEOCmdHeader header;
    u8 test;
    u8 reserve2;
    u8 reserve3;
    u8 reserve4;
};

/* 119 */
typedef struct s602B82F1E1FC18439A07C0036332AED1 LEOCmdTestUnitReady;

/* 120 */
typedef struct sF9D8B2A20430FF9D2D58A6065C7229BA LEOCmdRezero;

/* 121 */
struct s4C6B0630989A0BBB30FEF83EB93F675E {
    LEOCmdHeader header;
    u32 lba;
    u32 xfer_blks;
    void *buff_ptr;
    u32 rw_bytes;
};

/* 122 */
typedef struct s4C6B0630989A0BBB30FEF83EB93F675E LEOCmdRead;

/* 123 */
typedef LEOCmdRead LEOCmdWrite;

/* 124 */
struct s7A817FBCD498A0E837F9C337DA20ADB3 {
    LEOCmdHeader header;
    u32 lba;
};

/* 125 */
typedef struct s7A817FBCD498A0E837F9C337DA20ADB3 LEOCmdSeek;

/* 126 */
typedef struct sF9D8B2A20430FF9D2D58A6065C7229BA LEOCmdStartStop;

/* 127 */
struct s0455A071B903F70F07C965571B1C86CD {
    LEOCmdHeader header;
    u32 start_lba;
    u32 end_lba;
    u32 capa_bytes;
};

/* 128 */
typedef struct s0455A071B903F70F07C965571B1C86CD LEOCmdReadCapacity;

/* 129 */
struct s9EED169F2B5527D2E1D724DD374CA1C3 {
    LEOCmdHeader header;
    u32 start_lba;
    u32 in_param;
    u32 out_param;
};

/* 130 */
typedef struct s9EED169F2B5527D2E1D724DD374CA1C3 LEOCmdTranslate;

/* 131 */
struct s2D584AFEE6030A313B5F72EF70CA5618 {
    LEOCmdHeader header;
    u8 page_code;
    u8 reserve1;
    u8 standby_time;
    u8 sleep_time;
    u8 led_on_time;
    u8 led_off_time;
    u8 reserve18;
    u8 reserve19;
};

/* 132 */
typedef struct s2D584AFEE6030A313B5F72EF70CA5618 LEOCmdModeSelect;

/* 133 */
struct s393E36053D7583B167EF17B485EB0C2D {
    LEOCmdHeader header;
    void *buffer_pointer;
};

/* 134 */
typedef struct s393E36053D7583B167EF17B485EB0C2D LEOCmdReadDiskId;

/* 135 */
struct s5945F70DC3765EE6398730AFFA3842F7 {
    LEOCmdHeader header;
    u8 reserve12;
    u8 reserve13;
    u8 year;
    u8 month;
    u8 day;
    u8 hour;
    u8 minute;
    u8 second;
};

/* 136 */
typedef struct s5945F70DC3765EE6398730AFFA3842F7 LEOCmdReadTimer;

/* 137 */
typedef LEOCmdReadTimer LEOCmdSetTimer;

/* 138 */
typedef u32 LEOError;

/* 139 */
typedef u8 LEOSpdlMode;

/* 140 */
typedef u8 LEOStatus;

/* 141 */
struct s8E3798725341DD3F5A7A124377A90C30 {
    u8 drive;
    u8 driver;
    u8 deviceType;
    u8 ndevices;
};

/* 142 */
typedef struct s8E3798725341DD3F5A7A124377A90C30 LEOVersion;

/* 143 */
struct s680DA5E8A5BD74FA95FC23B17CBCEA8F {
    u32 startLBA;
    u32 endLBA;
    u32 nbytes;
};

/* 144 */
typedef struct s680DA5E8A5BD74FA95FC23B17CBCEA8F LEOCapacity;

/* 145 */
struct sF1D356BF35E7CD0E47CB4B897CBA580E {
    u8 pad;
    u8 yearhi;
    u8 yearlo;
    u8 month;
    u8 day;
    u8 hour;
    u8 minute;
    u8 second;
};

/* 146 */
typedef struct sF1D356BF35E7CD0E47CB4B897CBA580E LEODiskTime;

/* 147 */
struct sEF9D64D322230D31906762D2F7BBDCC2 {
    u64 lineNumber;
    LEODiskTime time;
};

/* 148 */
typedef struct sEF9D64D322230D31906762D2F7BBDCC2 LEOSerialNum;

/* 149 */
struct s19E08DEC0C5D95BFB72A44F1F9F7F472 {
    u8 gameName[4];
    u8 gameVersion;
    u8 diskNumber;
    u8 ramUsage;
    u8 diskUsage;
    LEOSerialNum serialNumber;
    u8 company[2];
    u8 freeArea[6];
};

/* 150 */
typedef struct s19E08DEC0C5D95BFB72A44F1F9F7F472 LEODiskID;

/* 151 */
struct ss9B3256245C6651DCAD7B3924742CC43Cs371A7872378AC78312AF5BE0074A6942 {
    u32 lba;
    u32 xfer_blks;
    void *buff_ptr;
    u32 rw_bytes;
};

/* 152 */
struct ss9B3256245C6651DCAD7B3924742CC43Cs2C978785457648A2F6DE0073144F84BA {
    u32 lba;
};

/* 153 */
struct ss9B3256245C6651DCAD7B3924742CC43CsAFB98352841310E379D3C8A5449A2C66 {
    void *buffer_pointer;
};

/* 154 */
struct ss9B3256245C6651DCAD7B3924742CC43CsB6171CFB5F900A2CCC9E3AFF175523C1 {
    u8 reserve1;
    u8 reserve2;
    u8 standby_time;
    u8 sleep_time;
    u32 reserve3;
};

/* 155 */
union s7E8D805E04A8322B3A633676E9E1CFDFs9B3256245C6651DCAD7B3924742CC43C {
    struct ss9B3256245C6651DCAD7B3924742CC43Cs371A7872378AC78312AF5BE0074A6942 readwrite;
    struct ss9B3256245C6651DCAD7B3924742CC43Cs2C978785457648A2F6DE0073144F84BA seek;
    struct ss9B3256245C6651DCAD7B3924742CC43CsAFB98352841310E379D3C8A5449A2C66 readdiskid;
    LEODiskTime time;
    struct ss9B3256245C6651DCAD7B3924742CC43CsB6171CFB5F900A2CCC9E3AFF175523C1 modeselect;
};

/* 156 */
struct s7E8D805E04A8322B3A633676E9E1CFDF {
    LEOCmdHeader header;
    union s7E8D805E04A8322B3A633676E9E1CFDFs9B3256245C6651DCAD7B3924742CC43C data;
};

/* 157 */
typedef struct s7E8D805E04A8322B3A633676E9E1CFDF LEOCmd;

/* 158 */
struct sDD54060F307CC511C1231C522D614BD1 {
    unsigned __int8 *base;
    int fmt;
    int siz;
    int xsize;
    int ysize;
    int lsize;
    int addr;
    int w;
    int h;
    int s;
    int t;
};

/* 159 */
typedef struct sDD54060F307CC511C1231C522D614BD1 Image;

/* 160 */
struct s4BEAA6302150DFF77A6D6B5C2F812979 {
    float col[3];
    float pos[3];
    float a1;
    float a2;
};

/* 161 */
typedef struct s4BEAA6302150DFF77A6D6B5C2F812979 PositionalLight;

/* 162 */
struct s4736D9DC66FE0104F0584D8A5D3A804D {
    u16 imageX;
    u16 imageW;
    s16 frameX;
    u16 frameW;
    u16 imageY;
    u16 imageH;
    s16 frameY;
    u16 frameH;
    u64 *imagePtr;
    u16 imageLoad;
    u8 imageFmt;
    u8 imageSiz;
    u16 imagePal;
    u16 imageFlip;
    u16 tmemW;
    u16 tmemH;
    u16 tmemLoadSH;
    u16 tmemLoadTH;
    u16 tmemSizeW;
    u16 tmemSize;
};

/* 163 */
typedef struct s4736D9DC66FE0104F0584D8A5D3A804D uObjBg_t;

/* 164 */
struct s878D9EEC532D5D725057E207C49A420F {
    u16 imageX;
    u16 imageW;
    s16 frameX;
    u16 frameW;
    u16 imageY;
    u16 imageH;
    s16 frameY;
    u16 frameH;
    u64 *imagePtr;
    u16 imageLoad;
    u8 imageFmt;
    u8 imageSiz;
    u16 imagePal;
    u16 imageFlip;
    u16 scaleW;
    u16 scaleH;
    s32 imageYorig;
    u8 padding[4];
};

/* 165 */
typedef struct s878D9EEC532D5D725057E207C49A420F uObjScaleBg_t;

/* 166 */
union s764502085FED99107016C6A00A560F1A {
    uObjBg_t b;
    uObjScaleBg_t s;
    __int64 force_structure_alignment;
};

/* 167 */
typedef union s764502085FED99107016C6A00A560F1A uObjBg;

/* 168 */
struct s5E1DB09C38575A8A48D28E879FD442A7 {
    s16 objX;
    u16 scaleW;
    u16 imageW;
    u16 paddingX;
    s16 objY;
    u16 scaleH;
    u16 imageH;
    u16 paddingY;
    u16 imageStride;
    u16 imageAdrs;
    u8 imageFmt;
    u8 imageSiz;
    u8 imagePal;
    u8 imageFlags;
};

/* 169 */
typedef struct s5E1DB09C38575A8A48D28E879FD442A7 uObjSprite_t;

/* 170 */
union sA3D203A9EBC356E6A8A8F6D5914EFF3D {
    uObjSprite_t s;
    __int64 force_structure_alignment;
};

/* 171 */
typedef union sA3D203A9EBC356E6A8A8F6D5914EFF3D uObjSprite;

/* 172 */
struct sBC86F400F781ECC25A33E21812C4F84F {
    s32 A;
    s32 B;
    s32 C;
    s32 D;
    s16 X;
    s16 Y;
    u16 BaseScaleX;
    u16 BaseScaleY;
};

/* 173 */
typedef struct sBC86F400F781ECC25A33E21812C4F84F uObjMtx_t;

/* 174 */
union s04A9B302DFF556E737B336B12CA42D3F {
    uObjMtx_t m;
    __int64 force_structure_alignment;
};

/* 175 */
typedef union s04A9B302DFF556E737B336B12CA42D3F uObjMtx;

/* 176 */
struct s8552FA742FDEC0E3712316A8A383E52D {
    s16 X;
    s16 Y;
    u16 BaseScaleX;
    u16 BaseScaleY;
};

/* 177 */
typedef struct s8552FA742FDEC0E3712316A8A383E52D uObjSubMtx_t;

/* 178 */
union s976B017B6F98356BB241BFB49D3BED37 {
    uObjSubMtx_t m;
    __int64 force_structure_alignment;
};

/* 179 */
typedef union s976B017B6F98356BB241BFB49D3BED37 uObjSubMtx;

/* 180 */
struct s88DD380296A7D97EABD9C6BD1C91381C {
    u32 type;
    u64 *image;
    u16 tmem;
    u16 tsize;
    u16 tline;
    u16 sid;
    u32 flag;
    u32 mask;
};

/* 181 */
typedef struct s88DD380296A7D97EABD9C6BD1C91381C uObjTxtrBlock_t;

/* 182 */
struct s29694430884C151244E5F5C8A3A3D2E2 {
    u32 type;
    u64 *image;
    u16 tmem;
    u16 twidth;
    u16 theight;
    u16 sid;
    u32 flag;
    u32 mask;
};

/* 183 */
typedef struct s29694430884C151244E5F5C8A3A3D2E2 uObjTxtrTile_t;

/* 184 */
struct s3C64C0DB0B9838E830FAAAD4F5BC7904 {
    u32 type;
    u64 *image;
    u16 phead;
    u16 pnum;
    u16 zero;
    u16 sid;
    u32 flag;
    u32 mask;
};

/* 185 */
typedef struct s3C64C0DB0B9838E830FAAAD4F5BC7904 uObjTxtrTLUT_t;

/* 186 */
union s077666EE3382305523AB5FCC165A67C6 {
    uObjTxtrBlock_t block;
    uObjTxtrTile_t tile;
    uObjTxtrTLUT_t tlut;
    __int64 force_structure_alignment;
};

/* 187 */
typedef union s077666EE3382305523AB5FCC165A67C6 uObjTxtr;

/* 188 */
struct sBC8E529C3C49CCCAD312C70AE961C2D9 {
    uObjTxtr txtr;
    uObjSprite sprite;
};

/* 189 */
typedef struct sBC8E529C3C49CCCAD312C70AE961C2D9 uObjTxSprite;

/* 190 */
struct sDE76B2023D76E254ABDC88FD5EA15C9B {
    __int16 ob[3];
    unsigned __int16 flag;
    __int16 tc[2];
    unsigned __int8 cn[4];
};

/* 191 */
typedef struct sDE76B2023D76E254ABDC88FD5EA15C9B Vtx_t;

/* 192 */
struct s6D20CD8435582A052993B9CC5E1A0C74 {
    __int16 ob[3];
    unsigned __int16 flag;
    __int16 tc[2];
    signed __int8 n[3];
    unsigned __int8 a;
};

/* 193 */
typedef struct s6D20CD8435582A052993B9CC5E1A0C74 Vtx_tn;

/* 194 */
union sFE936D70BDAB8CEB5D44D3E8B62B4B90 {
    Vtx_t v;
    Vtx_tn n;
    __int64 force_structure_alignment;
};

/* 195 */
typedef union sFE936D70BDAB8CEB5D44D3E8B62B4B90 Vtx;

/* 196 */
struct s6B262C31B911EF3A6356D66B40D9688D {
    void *SourceImagePointer;
    void *TlutPointer;
    __int16 Stride;
    __int16 SubImageWidth;
    __int16 SubImageHeight;
    char SourceImageType;
    char SourceImageBitSize;
    __int16 SourceImageOffsetS;
    __int16 SourceImageOffsetT;
    char dummy[4];
};

/* 197 */
typedef struct s6B262C31B911EF3A6356D66B40D9688D uSprite_t;

/* 198 */
union s05CF3A4A9D056DA91CF6D6AF24013E25 {
    uSprite_t s;
    __int64 force_structure_allignment[3];
};

/* 199 */
typedef union s05CF3A4A9D056DA91CF6D6AF24013E25 uSprite;

/* 200 */
struct s8FC9FFC2EF4747DC9DEE1008A0702E70 {
    unsigned __int8 flag;
    unsigned __int8 v[3];
};

/* 201 */
typedef struct s8FC9FFC2EF4747DC9DEE1008A0702E70 Tri;

/* 202 */
typedef int Mtx_t[4][4];

/* 203 */
union sE28A4F2B679B3A5C00ADB666AB96CD61 {
    Mtx_t m;
    __int64 force_structure_alignment;
};

/* 204 */
typedef union sE28A4F2B679B3A5C00ADB666AB96CD61 Mtx;

/* 205 */
struct s15B33DAF6C856F3F1255D3A43B813614 {
    __int16 vscale[4];
    __int16 vtrans[4];
};

/* 206 */
typedef struct s15B33DAF6C856F3F1255D3A43B813614 Vp_t;

/* 207 */
union s1D9E1A4963C082F208779442BCA35E5E {
    Vp_t vp;
    __int64 force_structure_alignment;
};

/* 208 */
typedef union s1D9E1A4963C082F208779442BCA35E5E Vp;

/* 209 */
struct sCD7117F68A9632F741479C8776A2B961 {
    unsigned __int8 col[3];
    char pad1;
    unsigned __int8 colc[3];
    char pad2;
    signed __int8 dir[3];
    char pad3;
};

/* 210 */
typedef struct sCD7117F68A9632F741479C8776A2B961 Light_t;

/* 211 */
struct s3E4C43383B03D7C4504B78B23DE65286 {
    unsigned __int8 col[3];
    char pad1;
    unsigned __int8 colc[3];
    char pad2;
};

/* 212 */
typedef struct s3E4C43383B03D7C4504B78B23DE65286 Ambient_t;

/* 213 */
struct s731068B5A5E343677E39D60309EFE4AA {
    int x1;
    int y1;
    int x2;
    int y2;
};

/* 214 */
typedef struct s731068B5A5E343677E39D60309EFE4AA Hilite_t;

/* 215 */
union s1A901C7F90EE1DD2971D7B247AB56471 {
    Light_t l;
    __int64 force_structure_alignment[2];
};

/* 216 */
typedef union s1A901C7F90EE1DD2971D7B247AB56471 Light;

/* 217 */
union s794C70EFB99083D1D8052DE0B7C3BFBA {
    Ambient_t l;
    __int64 force_structure_alignment[1];
};

/* 218 */
typedef union s794C70EFB99083D1D8052DE0B7C3BFBA Ambient;

/* 219 */
struct s1041C2C3D1029A2A1693C098AE83F737 {
    Ambient a;
    Light l[7];
};

/* 220 */
typedef struct s1041C2C3D1029A2A1693C098AE83F737 Lightsn;

/* 221 */
struct s5A48B0FCFA5C883BB9E21B3A3782D197 {
    Ambient a;
    Light l[1];
};

/* 222 */
typedef struct s5A48B0FCFA5C883BB9E21B3A3782D197 Lights0;

/* 223 */
typedef struct s5A48B0FCFA5C883BB9E21B3A3782D197 Lights1;

/* 224 */
struct sD10400D1AB41F4EB2EFC0A0C6B7C9043 {
    Ambient a;
    Light l[2];
};

/* 225 */
typedef struct sD10400D1AB41F4EB2EFC0A0C6B7C9043 Lights2;

/* 226 */
struct s49AF70F9BCCF9F0173D5CFDDB6F47500 {
    Ambient a;
    Light l[3];
};

/* 227 */
typedef struct s49AF70F9BCCF9F0173D5CFDDB6F47500 Lights3;

/* 228 */
struct s38EF7B503FD2851BCB5958AE25ED87CC {
    Ambient a;
    Light l[4];
};

/* 229 */
typedef struct s38EF7B503FD2851BCB5958AE25ED87CC Lights4;

/* 230 */
struct s5F7CA397C79AA47B51FA97F4E34387A3 {
    Ambient a;
    Light l[5];
};

/* 231 */
typedef struct s5F7CA397C79AA47B51FA97F4E34387A3 Lights5;

/* 232 */
struct s7C91C1D32BC690128195A23839DE1DC1 {
    Ambient a;
    Light l[6];
};

/* 233 */
typedef struct s7C91C1D32BC690128195A23839DE1DC1 Lights6;

/* 234 */
typedef struct s1041C2C3D1029A2A1693C098AE83F737 Lights7;

/* 235 */
struct s285823DFB0ACAEA3B815A95AEACA0362 {
    Light l[2];
};

/* 236 */
typedef struct s285823DFB0ACAEA3B815A95AEACA0362 LookAt;

/* 237 */
union s885DCD025FBBCB9B8A3CEEFF81CC8710 {
    Hilite_t h;
    int force_structure_alignment[4];
};

/* 238 */
typedef union s885DCD025FBBCB9B8A3CEEFF81CC8710 Hilite;

/* 239 */
struct s057E64ACAC04B2DB0857EA52B3EFF08F {
    __int32 cmd : 8;
    unsigned __int32 par : 8;
    unsigned __int32 len : 16;
    unsigned int addr;
};

/* 240 */
typedef struct s057E64ACAC04B2DB0857EA52B3EFF08F Gdma;

/* 241 */
struct s342400141677C766B3FBBF6427D67137 {
    __int32 cmd : 8;
    __int32 pad : 24;
    Tri tri;
};

/* 242 */
typedef struct s342400141677C766B3FBBF6427D67137 Gtri;

/* 243 */
struct s343537267C6AB660B614ACC3BA32EB54 {
    __int32 cmd : 8;
    __int32 pad1 : 24;
    __int32 pad2 : 24;
    unsigned __int8 param : 8;
};

/* 244 */
typedef struct s343537267C6AB660B614ACC3BA32EB54 Gpopmtx;

/* 245 */
struct sB7AE06E2C5260875967E3C9C452C7F8B {
    __int32 cmd : 8;
    __int32 pad0 : 8;
    __int32 mw_index : 8;
    __int32 number : 8;
    __int32 pad1 : 8;
    __int32 base : 24;
};

/* 246 */
typedef struct sB7AE06E2C5260875967E3C9C452C7F8B Gsegment;

/* 247 */
struct sE7C512731D688D12904F43D5F8E6CEB9 {
    __int32 cmd : 8;
    __int32 pad0 : 8;
    __int32 sft : 8;
    __int32 len : 8;
    unsigned __int32 data : 32;
};

/* 248 */
typedef struct sE7C512731D688D12904F43D5F8E6CEB9 GsetothermodeL;

/* 249 */
typedef struct sE7C512731D688D12904F43D5F8E6CEB9 GsetothermodeH;

/* 250 */
struct s21D42E7EEBFD91F540BBF83FF907815A {
    unsigned __int8 cmd;
    unsigned __int8 lodscale;
    unsigned __int8 tile;
    unsigned __int8 on;
    unsigned __int16 s;
    unsigned __int16 t;
};

/* 251 */
typedef struct s21D42E7EEBFD91F540BBF83FF907815A Gtexture;

/* 252 */
struct sD678086E0FDB2BAB70B19E1EAC09086C {
    __int32 cmd : 8;
    __int32 pad : 24;
    Tri line;
};

/* 253 */
typedef struct sD678086E0FDB2BAB70B19E1EAC09086C Gline3D;

/* 254 */
struct sA93BC644F861E51A1A3441325F4574B7 {
    __int32 cmd : 8;
    __int32 pad1 : 24;
    __int16 pad2;
    __int16 scale;
};

/* 255 */
typedef struct sA93BC644F861E51A1A3441325F4574B7 Gperspnorm;

/* 256 */
struct sEEBA3EFB87F6749B515B0FB65CECCA7E {
    __int32 cmd : 8;
    unsigned __int32 fmt : 3;
    unsigned __int32 siz : 2;
    unsigned __int32 pad : 7;
    unsigned __int32 wd : 12;
    unsigned int dram;
};

/* 257 */
typedef struct sEEBA3EFB87F6749B515B0FB65CECCA7E Gsetimg;

/* 258 */
struct s54E7556C959F50E5C9E40B5A77F56B44 {
    __int32 cmd : 8;
    unsigned __int32 muxs0 : 24;
    unsigned __int32 muxs1 : 32;
};

/* 259 */
typedef struct s54E7556C959F50E5C9E40B5A77F56B44 Gsetcombine;

/* 260 */
struct s7A105B94A35D3D29B0190F20E8FC7105 {
    __int32 cmd : 8;
    unsigned __int8 pad;
    unsigned __int8 prim_min_level;
    unsigned __int8 prim_level;
    unsigned int color;
};

/* 261 */
typedef struct s7A105B94A35D3D29B0190F20E8FC7105 Gsetcolor;

/* 262 */
struct s074DE7E471A38BBC764C0B4720DE4A95 {
    __int32 cmd : 8;
    __int32 x0 : 10;
    __int32 x0frac : 2;
    __int32 y0 : 10;
    __int32 y0frac : 2;
    unsigned __int32 pad : 8;
    __int32 x1 : 10;
    __int32 x1frac : 2;
    __int32 y1 : 10;
    __int32 y1frac : 2;
};

/* 263 */
typedef struct s074DE7E471A38BBC764C0B4720DE4A95 Gfillrect;

/* 264 */
struct s40B5F8DE2281E445FF2959E4E51E2E90 {
    __int32 cmd : 8;
    unsigned __int32 fmt : 3;
    unsigned __int32 siz : 2;
    unsigned __int32 pad0 : 1;
    unsigned __int32 line : 9;
    unsigned __int32 tmem : 9;
    unsigned __int32 pad1 : 5;
    unsigned __int32 tile : 3;
    unsigned __int32 palette : 4;
    unsigned __int32 ct : 1;
    unsigned __int32 mt : 1;
    unsigned __int32 maskt : 4;
    unsigned __int32 shiftt : 4;
    unsigned __int32 cs : 1;
    unsigned __int32 ms : 1;
    unsigned __int32 masks : 4;
    unsigned __int32 shifts : 4;
};

/* 265 */
typedef struct s40B5F8DE2281E445FF2959E4E51E2E90 Gsettile;

/* 266 */
struct s0F32B21D1FADF4DF62A840780E0AA2BC {
    __int32 cmd : 8;
    unsigned __int32 sl : 12;
    unsigned __int32 tl : 12;
    __int32 pad : 5;
    unsigned __int32 tile : 3;
    unsigned __int32 sh : 12;
    unsigned __int32 th : 12;
};

/* 267 */
typedef struct s0F32B21D1FADF4DF62A840780E0AA2BC Gloadtile;

/* 268 */
typedef Gloadtile Gloadblock;

/* 269 */
typedef Gloadtile Gsettilesize;

/* 270 */
typedef Gloadtile Gloadtlut;

/* 271 */
struct sAEE431466C8F9AB295EA7005BF2FFB88 {
    unsigned __int32 cmd : 8;
    unsigned __int32 xl : 12;
    unsigned __int32 yl : 12;
    unsigned __int32 pad1 : 5;
    unsigned __int32 tile : 3;
    unsigned __int32 xh : 12;
    unsigned __int32 yh : 12;
    unsigned __int32 s : 16;
    unsigned __int32 t : 16;
    unsigned __int32 dsdx : 16;
    unsigned __int32 dtdy : 16;
};

/* 272 */
typedef struct sAEE431466C8F9AB295EA7005BF2FFB88 Gtexrect;

/* 273 */
struct sE619E422122B67506E3D6E7F1AF175F5 {
    unsigned int w0;
    unsigned int w1;
    unsigned int w2;
    unsigned int w3;
};

/* 274 */
typedef struct sE619E422122B67506E3D6E7F1AF175F5 TexRect;

/* 275 */
struct sC37F7A71C8AE469D169982A30D852696 {
    unsigned int w0;
    unsigned int w1;
};

/* 276 */
typedef struct sC37F7A71C8AE469D169982A30D852696 Gwords;

/* 277 */
union s63E930E3C7814B3FA85AD02441ABC19E {
    Gwords words;
    Gdma dma;
    Gtri tri;
    Gline3D line;
    Gpopmtx popmtx;
    Gsegment segment;
    GsetothermodeH setothermodeH;
    GsetothermodeL setothermodeL;
    Gtexture texture;
    Gperspnorm perspnorm;
    Gsetimg setimg;
    Gsetcombine setcombine;
    Gsetcolor setcolor;
    Gfillrect fillrect;
    Gsettile settile;
    Gloadtile loadtile;
    Gsettilesize settilesize;
    Gloadtlut loadtlut;
    __int64 force_structure_alignment;
};

/* 278 */
typedef union s63E930E3C7814B3FA85AD02441ABC19E Gfx;

/* 280 */
enum MACRO_OS_EVENT {
    OS_EVENT_SP = 0x4,
    OS_EVENT_SI = 0x5,
    OS_EVENT_DP = 0x9,
};

/* 281 */
typedef const void *voidpc;

/* 283 */
typedef unsigned int uLong;

/* 286 */
struct __attribute__((aligned(4))) z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned int total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned int total_out;
    char *msg;
    struct internal_state *state;
    void* zalloc;
    void* zfree;
    void *opaque;
    int data_type;
    unsigned int adler;
    unsigned int reserved;
};
typedef struct z_stream_s *z_streamp;

/* 289 */
enum internal_states1F0FC51996547D7EC9E0C759B4F2DCD6 {
    METHOD = 0x0,
    FLAG = 0x1,
    DICT4 = 0x2,
    DICT3 = 0x3,
    DICT2 = 0x4,
    DICT1 = 0x5,
    DICT0 = 0x6,
    BLOCKS = 0x7,
    CHECK4 = 0x8,
    CHECK3 = 0x9,
    CHECK2 = 0xA,
    CHECK1 = 0xB,
    DONE = 0xC,
    BAD = 0xD,
};

/* 288 */
struct internal_states0574E57019B736D7717017299DCC15CFsA1AD60A7CB977A1DBF6E2660B1E40DE7 {
    unsigned int was;
    unsigned int need;
};

/* 290 */
union internal_states0574E57019B736D7717017299DCC15CF {
    uInt method;
    struct internal_states0574E57019B736D7717017299DCC15CFsA1AD60A7CB977A1DBF6E2660B1E40DE7 check;
    unsigned int marker;
};

/* 291 */
struct internal_state {
    enum internal_states1F0FC51996547D7EC9E0C759B4F2DCD6 mode;
    union internal_states0574E57019B736D7717017299DCC15CF sub;
    int nowrap;
    unsigned int wbits;
    void *blocks;
};

/* 293 */
typedef struct __attribute__((aligned(4))) Car {
    int field_0;
    int field_1;
    int field_2;
    int field_3;
    int field_4;
    int field_5;
    int field_6;
    int size;
    int last;
} Car;

/* 294 */
struct unk0 {
    Car *field_0;
    int field_4;
    int field_8;
    int field_C;
    int field_10;
    int field_14;
    int field_18;
    int size;
    _BYTE gap20[60];
    Car *last;
};
